// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bitflyer/orders.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CrossTrader.Models.Remoting.BitFlyer {

  /// <summary>Holder for reflection information generated from bitflyer/orders.proto</summary>
  internal static partial class OrdersReflection {

    #region Descriptor
    /// <summary>File descriptor for bitflyer/orders.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrdersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChViaXRmbHllci9vcmRlcnMucHJvdG8SFGNyb3NzdHJhZGVyLmJpdGZseWVy",
            "Ghtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1",
            "Zi90aW1lc3RhbXAucHJvdG8aDGNvbW1vbi5wcm90byL9AwoRQ2hpbGRPcmRl",
            "ck1lc3NhZ2USCgoCaWQYASABKAMSFgoOY2hpbGRfb3JkZXJfaWQYAiABKAkS",
            "JAoEc2lkZRgDIAEoDjIWLmNyb3NzdHJhZGVyLk9yZGVyU2lkZRI+ChBjaGls",
            "ZF9vcmRlcl90eXBlGAQgASgOMiQuY3Jvc3N0cmFkZXIuYml0Zmx5ZXIuQ2hp",
            "bGRPcmRlclR5cGUSDQoFcHJpY2UYBSABKAESFQoNYXZlcmFnZV9wcmljZRgG",
            "IAEoARIMCgRzaXplGAcgASgBEkAKEWNoaWxkX29yZGVyX3N0YXRlGAggASgO",
            "MiUuY3Jvc3N0cmFkZXIuYml0Zmx5ZXIuQ2hpbGRPcmRlclN0YXRlEi8KC2V4",
            "cGlyZV9kYXRlGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0",
            "ChBjaGlsZF9vcmRlcl9kYXRlGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBIhChljaGlsZF9vcmRlcl9hY2NlcHRhbmNlX2lkGAsgASgJEhgK",
            "EG91dHN0YW5kaW5nX3NpemUYDCABKAESEwoLY2FuY2VsX3NpemUYDSABKAES",
            "FQoNZXhlY3V0ZWRfc2l6ZRgOIAEoARIYChB0b3RhbF9jb21taXNzaW9uGA8g",
            "ASgBInoKE0NoaWxkT3JkZXJzUmVzcG9uc2USKgoGYWN0aW9uGAEgASgOMhou",
            "Y3Jvc3N0cmFkZXIuQ2hhbmdlZEFjdGlvbhI3CgZvcmRlcnMYAiADKAsyJy5j",
            "cm9zc3RyYWRlci5iaXRmbHllci5DaGlsZE9yZGVyTWVzc2FnZSKFAgoVUG9z",
            "dENoaWxkT3JkZXJSZXF1ZXN0EhUKDWluc3RydW1lbnRfaWQYASABKAUSPgoQ",
            "Y2hpbGRfb3JkZXJfdHlwZRgCIAEoDjIkLmNyb3NzdHJhZGVyLmJpdGZseWVy",
            "LkNoaWxkT3JkZXJUeXBlEiQKBHNpZGUYAyABKA4yFi5jcm9zc3RyYWRlci5P",
            "cmRlclNpZGUSDQoFcHJpY2UYBCABKAESDAoEc2l6ZRgFIAEoARIYChBtaW51",
            "dGVfdG9fZXhwaXJlGAYgASgBEjgKDXRpbWVfaW5fZm9yY2UYByABKA4yIS5j",
            "cm9zc3RyYWRlci5iaXRmbHllci5UaW1lSW5Gb3JjZSI7ChZQb3N0Q2hpbGRP",
            "cmRlclJlc3BvbnNlEiEKGWNoaWxkX29yZGVyX2FjY2VwdGFuY2VfaWQYASAB",
            "KAkiawoXQ2FuY2VsQ2hpbGRPcmRlclJlcXVlc3QSFQoNaW5zdHJ1bWVudF9p",
            "ZBgBIAEoBRIWCg5jaGlsZF9vcmRlcl9pZBgCIAEoCRIhChljaGlsZF9vcmRl",
            "cl9hY2NlcHRhbmNlX2lkGAMgASgJKkIKDkNoaWxkT3JkZXJUeXBlEhkKFUNI",
            "SUxEX09SREVSX1RZUEVfTk9ORRAAEgkKBUxJTUlUEAESCgoGTUFSS0VUEAIq",
            "cQoPQ2hpbGRPcmRlclN0YXRlEhoKFkNISUxEX09SREVSX1NUQVRFX05PTkUQ",
            "ABIKCgZBQ1RJVkUQARINCglDT01QTEVURUQQAhIMCghDQU5DRUxFRBADEgsK",
            "B0VYUElSRUQQBBIMCghSRUpFQ1RFRBAFKigKC1RpbWVJbkZvcmNlEgcKA0dU",
            "QxAAEgcKA0lPQxABEgcKA0ZPSxACMpADCg1PcmRlcnNTZXJ2aWNlEmUKFFN1",
            "YnNjcmliZUNoaWxkT3JkZXJzEiAuY3Jvc3N0cmFkZXIuSW5zdHJ1bWVudElk",
            "UmVxdWVzdBopLmNyb3NzdHJhZGVyLmJpdGZseWVyLkNoaWxkT3JkZXJzUmVz",
            "cG9uc2UwARJrCg5Qb3N0Q2hpbGRPcmRlchIrLmNyb3NzdHJhZGVyLmJpdGZs",
            "eWVyLlBvc3RDaGlsZE9yZGVyUmVxdWVzdBosLmNyb3NzdHJhZGVyLmJpdGZs",
            "eWVyLlBvc3RDaGlsZE9yZGVyUmVzcG9uc2USWQoQQ2FuY2VsQ2hpbGRPcmRl",
            "chItLmNyb3NzdHJhZGVyLmJpdGZseWVyLkNhbmNlbENoaWxkT3JkZXJSZXF1",
            "ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5ElAKFENhbmNlbEFsbENoaWxk",
            "T3JkZXJzEiAuY3Jvc3N0cmFkZXIuSW5zdHJ1bWVudElkUmVxdWVzdBoWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eUInqgIkQ3Jvc3NUcmFkZXIuTW9kZWxzLlJl",
            "bW90aW5nLkJpdEZseWVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::CrossTrader.Models.Remoting.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType), typeof(global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState), typeof(global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderMessage), global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderMessage.Parser, new[]{ "Id", "ChildOrderId", "Side", "ChildOrderType", "Price", "AveragePrice", "Size", "ChildOrderState", "ExpireDate", "ChildOrderDate", "ChildOrderAcceptanceId", "OutstandingSize", "CancelSize", "ExecutedSize", "TotalCommission" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.BitFlyer.ChildOrdersResponse), global::CrossTrader.Models.Remoting.BitFlyer.ChildOrdersResponse.Parser, new[]{ "Action", "Orders" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest), global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest.Parser, new[]{ "InstrumentId", "ChildOrderType", "Side", "Price", "Size", "MinuteToExpire", "TimeInForce" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse), global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse.Parser, new[]{ "ChildOrderAcceptanceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest), global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest.Parser, new[]{ "InstrumentId", "ChildOrderId", "ChildOrderAcceptanceId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum ChildOrderType {
    [pbr::OriginalName("CHILD_ORDER_TYPE_NONE")] None = 0,
    [pbr::OriginalName("LIMIT")] Limit = 1,
    [pbr::OriginalName("MARKET")] Market = 2,
  }

  internal enum ChildOrderState {
    [pbr::OriginalName("CHILD_ORDER_STATE_NONE")] None = 0,
    [pbr::OriginalName("ACTIVE")] Active = 1,
    [pbr::OriginalName("COMPLETED")] Completed = 2,
    [pbr::OriginalName("CANCELED")] Canceled = 3,
    [pbr::OriginalName("EXPIRED")] Expired = 4,
    [pbr::OriginalName("REJECTED")] Rejected = 5,
  }

  internal enum TimeInForce {
    [pbr::OriginalName("GTC")] Gtc = 0,
    [pbr::OriginalName("IOC")] Ioc = 1,
    [pbr::OriginalName("FOK")] Fok = 2,
  }

  #endregion

  #region Messages
  internal sealed partial class ChildOrderMessage : pb::IMessage<ChildOrderMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChildOrderMessage> _parser = new pb::MessageParser<ChildOrderMessage>(() => new ChildOrderMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChildOrderMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.BitFlyer.OrdersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChildOrderMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChildOrderMessage(ChildOrderMessage other) : this() {
      id_ = other.id_;
      childOrderId_ = other.childOrderId_;
      side_ = other.side_;
      childOrderType_ = other.childOrderType_;
      price_ = other.price_;
      averagePrice_ = other.averagePrice_;
      size_ = other.size_;
      childOrderState_ = other.childOrderState_;
      expireDate_ = other.expireDate_ != null ? other.expireDate_.Clone() : null;
      childOrderDate_ = other.childOrderDate_ != null ? other.childOrderDate_.Clone() : null;
      childOrderAcceptanceId_ = other.childOrderAcceptanceId_;
      outstandingSize_ = other.outstandingSize_;
      cancelSize_ = other.cancelSize_;
      executedSize_ = other.executedSize_;
      totalCommission_ = other.totalCommission_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChildOrderMessage Clone() {
      return new ChildOrderMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "child_order_id" field.</summary>
    public const int ChildOrderIdFieldNumber = 2;
    private string childOrderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChildOrderId {
      get { return childOrderId_; }
      set {
        childOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 3;
    private global::CrossTrader.Models.Remoting.OrderSide side_ = global::CrossTrader.Models.Remoting.OrderSide.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.OrderSide Side {
      get { return side_; }
      set {
        side_ = value;
      }
    }

    /// <summary>Field number for the "child_order_type" field.</summary>
    public const int ChildOrderTypeFieldNumber = 4;
    private global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType childOrderType_ = global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType ChildOrderType {
      get { return childOrderType_; }
      set {
        childOrderType_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 5;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "average_price" field.</summary>
    public const int AveragePriceFieldNumber = 6;
    private double averagePrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AveragePrice {
      get { return averagePrice_; }
      set {
        averagePrice_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 7;
    private double size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "child_order_state" field.</summary>
    public const int ChildOrderStateFieldNumber = 8;
    private global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState childOrderState_ = global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState ChildOrderState {
      get { return childOrderState_; }
      set {
        childOrderState_ = value;
      }
    }

    /// <summary>Field number for the "expire_date" field.</summary>
    public const int ExpireDateFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireDate {
      get { return expireDate_; }
      set {
        expireDate_ = value;
      }
    }

    /// <summary>Field number for the "child_order_date" field.</summary>
    public const int ChildOrderDateFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp childOrderDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ChildOrderDate {
      get { return childOrderDate_; }
      set {
        childOrderDate_ = value;
      }
    }

    /// <summary>Field number for the "child_order_acceptance_id" field.</summary>
    public const int ChildOrderAcceptanceIdFieldNumber = 11;
    private string childOrderAcceptanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChildOrderAcceptanceId {
      get { return childOrderAcceptanceId_; }
      set {
        childOrderAcceptanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "outstanding_size" field.</summary>
    public const int OutstandingSizeFieldNumber = 12;
    private double outstandingSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OutstandingSize {
      get { return outstandingSize_; }
      set {
        outstandingSize_ = value;
      }
    }

    /// <summary>Field number for the "cancel_size" field.</summary>
    public const int CancelSizeFieldNumber = 13;
    private double cancelSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CancelSize {
      get { return cancelSize_; }
      set {
        cancelSize_ = value;
      }
    }

    /// <summary>Field number for the "executed_size" field.</summary>
    public const int ExecutedSizeFieldNumber = 14;
    private double executedSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ExecutedSize {
      get { return executedSize_; }
      set {
        executedSize_ = value;
      }
    }

    /// <summary>Field number for the "total_commission" field.</summary>
    public const int TotalCommissionFieldNumber = 15;
    private double totalCommission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalCommission {
      get { return totalCommission_; }
      set {
        totalCommission_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChildOrderMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChildOrderMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ChildOrderId != other.ChildOrderId) return false;
      if (Side != other.Side) return false;
      if (ChildOrderType != other.ChildOrderType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AveragePrice, other.AveragePrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Size, other.Size)) return false;
      if (ChildOrderState != other.ChildOrderState) return false;
      if (!object.Equals(ExpireDate, other.ExpireDate)) return false;
      if (!object.Equals(ChildOrderDate, other.ChildOrderDate)) return false;
      if (ChildOrderAcceptanceId != other.ChildOrderAcceptanceId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OutstandingSize, other.OutstandingSize)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CancelSize, other.CancelSize)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ExecutedSize, other.ExecutedSize)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalCommission, other.TotalCommission)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (ChildOrderId.Length != 0) hash ^= ChildOrderId.GetHashCode();
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) hash ^= Side.GetHashCode();
      if (ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) hash ^= ChildOrderType.GetHashCode();
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (AveragePrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AveragePrice);
      if (Size != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Size);
      if (ChildOrderState != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState.None) hash ^= ChildOrderState.GetHashCode();
      if (expireDate_ != null) hash ^= ExpireDate.GetHashCode();
      if (childOrderDate_ != null) hash ^= ChildOrderDate.GetHashCode();
      if (ChildOrderAcceptanceId.Length != 0) hash ^= ChildOrderAcceptanceId.GetHashCode();
      if (OutstandingSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OutstandingSize);
      if (CancelSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CancelSize);
      if (ExecutedSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ExecutedSize);
      if (TotalCommission != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalCommission);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (ChildOrderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildOrderId);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Side);
      }
      if (ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ChildOrderType);
      }
      if (Price != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Price);
      }
      if (AveragePrice != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(AveragePrice);
      }
      if (Size != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Size);
      }
      if (ChildOrderState != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState.None) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ChildOrderState);
      }
      if (expireDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ExpireDate);
      }
      if (childOrderDate_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ChildOrderDate);
      }
      if (ChildOrderAcceptanceId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ChildOrderAcceptanceId);
      }
      if (OutstandingSize != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(OutstandingSize);
      }
      if (CancelSize != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(CancelSize);
      }
      if (ExecutedSize != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(ExecutedSize);
      }
      if (TotalCommission != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(TotalCommission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (ChildOrderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildOrderId);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Side);
      }
      if (ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ChildOrderType);
      }
      if (Price != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Price);
      }
      if (AveragePrice != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(AveragePrice);
      }
      if (Size != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Size);
      }
      if (ChildOrderState != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState.None) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ChildOrderState);
      }
      if (expireDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ExpireDate);
      }
      if (childOrderDate_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ChildOrderDate);
      }
      if (ChildOrderAcceptanceId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ChildOrderAcceptanceId);
      }
      if (OutstandingSize != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(OutstandingSize);
      }
      if (CancelSize != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(CancelSize);
      }
      if (ExecutedSize != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(ExecutedSize);
      }
      if (TotalCommission != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(TotalCommission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (ChildOrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildOrderId);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
      }
      if (ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChildOrderType);
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (AveragePrice != 0D) {
        size += 1 + 8;
      }
      if (Size != 0D) {
        size += 1 + 8;
      }
      if (ChildOrderState != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChildOrderState);
      }
      if (expireDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireDate);
      }
      if (childOrderDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChildOrderDate);
      }
      if (ChildOrderAcceptanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildOrderAcceptanceId);
      }
      if (OutstandingSize != 0D) {
        size += 1 + 8;
      }
      if (CancelSize != 0D) {
        size += 1 + 8;
      }
      if (ExecutedSize != 0D) {
        size += 1 + 8;
      }
      if (TotalCommission != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChildOrderMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.ChildOrderId.Length != 0) {
        ChildOrderId = other.ChildOrderId;
      }
      if (other.Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        Side = other.Side;
      }
      if (other.ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) {
        ChildOrderType = other.ChildOrderType;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.AveragePrice != 0D) {
        AveragePrice = other.AveragePrice;
      }
      if (other.Size != 0D) {
        Size = other.Size;
      }
      if (other.ChildOrderState != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState.None) {
        ChildOrderState = other.ChildOrderState;
      }
      if (other.expireDate_ != null) {
        if (expireDate_ == null) {
          ExpireDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireDate.MergeFrom(other.ExpireDate);
      }
      if (other.childOrderDate_ != null) {
        if (childOrderDate_ == null) {
          ChildOrderDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ChildOrderDate.MergeFrom(other.ChildOrderDate);
      }
      if (other.ChildOrderAcceptanceId.Length != 0) {
        ChildOrderAcceptanceId = other.ChildOrderAcceptanceId;
      }
      if (other.OutstandingSize != 0D) {
        OutstandingSize = other.OutstandingSize;
      }
      if (other.CancelSize != 0D) {
        CancelSize = other.CancelSize;
      }
      if (other.ExecutedSize != 0D) {
        ExecutedSize = other.ExecutedSize;
      }
      if (other.TotalCommission != 0D) {
        TotalCommission = other.TotalCommission;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            ChildOrderId = input.ReadString();
            break;
          }
          case 24: {
            Side = (global::CrossTrader.Models.Remoting.OrderSide) input.ReadEnum();
            break;
          }
          case 32: {
            ChildOrderType = (global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType) input.ReadEnum();
            break;
          }
          case 41: {
            Price = input.ReadDouble();
            break;
          }
          case 49: {
            AveragePrice = input.ReadDouble();
            break;
          }
          case 57: {
            Size = input.ReadDouble();
            break;
          }
          case 64: {
            ChildOrderState = (global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState) input.ReadEnum();
            break;
          }
          case 74: {
            if (expireDate_ == null) {
              ExpireDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireDate);
            break;
          }
          case 82: {
            if (childOrderDate_ == null) {
              ChildOrderDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ChildOrderDate);
            break;
          }
          case 90: {
            ChildOrderAcceptanceId = input.ReadString();
            break;
          }
          case 97: {
            OutstandingSize = input.ReadDouble();
            break;
          }
          case 105: {
            CancelSize = input.ReadDouble();
            break;
          }
          case 113: {
            ExecutedSize = input.ReadDouble();
            break;
          }
          case 121: {
            TotalCommission = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            ChildOrderId = input.ReadString();
            break;
          }
          case 24: {
            Side = (global::CrossTrader.Models.Remoting.OrderSide) input.ReadEnum();
            break;
          }
          case 32: {
            ChildOrderType = (global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType) input.ReadEnum();
            break;
          }
          case 41: {
            Price = input.ReadDouble();
            break;
          }
          case 49: {
            AveragePrice = input.ReadDouble();
            break;
          }
          case 57: {
            Size = input.ReadDouble();
            break;
          }
          case 64: {
            ChildOrderState = (global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderState) input.ReadEnum();
            break;
          }
          case 74: {
            if (expireDate_ == null) {
              ExpireDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireDate);
            break;
          }
          case 82: {
            if (childOrderDate_ == null) {
              ChildOrderDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ChildOrderDate);
            break;
          }
          case 90: {
            ChildOrderAcceptanceId = input.ReadString();
            break;
          }
          case 97: {
            OutstandingSize = input.ReadDouble();
            break;
          }
          case 105: {
            CancelSize = input.ReadDouble();
            break;
          }
          case 113: {
            ExecutedSize = input.ReadDouble();
            break;
          }
          case 121: {
            TotalCommission = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ChildOrdersResponse : pb::IMessage<ChildOrdersResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChildOrdersResponse> _parser = new pb::MessageParser<ChildOrdersResponse>(() => new ChildOrdersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChildOrdersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.BitFlyer.OrdersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChildOrdersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChildOrdersResponse(ChildOrdersResponse other) : this() {
      action_ = other.action_;
      orders_ = other.orders_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChildOrdersResponse Clone() {
      return new ChildOrdersResponse(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::CrossTrader.Models.Remoting.ChangedAction action_ = global::CrossTrader.Models.Remoting.ChangedAction.Add;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.ChangedAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "orders" field.</summary>
    public const int OrdersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderMessage> _repeated_orders_codec
        = pb::FieldCodec.ForMessage(18, global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderMessage.Parser);
    private readonly pbc::RepeatedField<global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderMessage> orders_ = new pbc::RepeatedField<global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderMessage> Orders {
      get { return orders_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChildOrdersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChildOrdersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if(!orders_.Equals(other.orders_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) hash ^= Action.GetHashCode();
      hash ^= orders_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      orders_.WriteTo(output, _repeated_orders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      orders_.WriteTo(ref output, _repeated_orders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      size += orders_.CalculateSize(_repeated_orders_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChildOrdersResponse other) {
      if (other == null) {
        return;
      }
      if (other.Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) {
        Action = other.Action;
      }
      orders_.Add(other.orders_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::CrossTrader.Models.Remoting.ChangedAction) input.ReadEnum();
            break;
          }
          case 18: {
            orders_.AddEntriesFrom(input, _repeated_orders_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = (global::CrossTrader.Models.Remoting.ChangedAction) input.ReadEnum();
            break;
          }
          case 18: {
            orders_.AddEntriesFrom(ref input, _repeated_orders_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class PostChildOrderRequest : pb::IMessage<PostChildOrderRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PostChildOrderRequest> _parser = new pb::MessageParser<PostChildOrderRequest>(() => new PostChildOrderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PostChildOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.BitFlyer.OrdersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostChildOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostChildOrderRequest(PostChildOrderRequest other) : this() {
      instrumentId_ = other.instrumentId_;
      childOrderType_ = other.childOrderType_;
      side_ = other.side_;
      price_ = other.price_;
      size_ = other.size_;
      minuteToExpire_ = other.minuteToExpire_;
      timeInForce_ = other.timeInForce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostChildOrderRequest Clone() {
      return new PostChildOrderRequest(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "child_order_type" field.</summary>
    public const int ChildOrderTypeFieldNumber = 2;
    private global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType childOrderType_ = global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType ChildOrderType {
      get { return childOrderType_; }
      set {
        childOrderType_ = value;
      }
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 3;
    private global::CrossTrader.Models.Remoting.OrderSide side_ = global::CrossTrader.Models.Remoting.OrderSide.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.OrderSide Side {
      get { return side_; }
      set {
        side_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 4;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 5;
    private double size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "minute_to_expire" field.</summary>
    public const int MinuteToExpireFieldNumber = 6;
    private double minuteToExpire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinuteToExpire {
      get { return minuteToExpire_; }
      set {
        minuteToExpire_ = value;
      }
    }

    /// <summary>Field number for the "time_in_force" field.</summary>
    public const int TimeInForceFieldNumber = 7;
    private global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce timeInForce_ = global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce.Gtc;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce TimeInForce {
      get { return timeInForce_; }
      set {
        timeInForce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PostChildOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PostChildOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (ChildOrderType != other.ChildOrderType) return false;
      if (Side != other.Side) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Size, other.Size)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinuteToExpire, other.MinuteToExpire)) return false;
      if (TimeInForce != other.TimeInForce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) hash ^= ChildOrderType.GetHashCode();
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) hash ^= Side.GetHashCode();
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (Size != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Size);
      if (MinuteToExpire != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinuteToExpire);
      if (TimeInForce != global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce.Gtc) hash ^= TimeInForce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ChildOrderType);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Side);
      }
      if (Price != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Price);
      }
      if (Size != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Size);
      }
      if (MinuteToExpire != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(MinuteToExpire);
      }
      if (TimeInForce != global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce.Gtc) {
        output.WriteRawTag(56);
        output.WriteEnum((int) TimeInForce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ChildOrderType);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Side);
      }
      if (Price != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Price);
      }
      if (Size != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Size);
      }
      if (MinuteToExpire != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(MinuteToExpire);
      }
      if (TimeInForce != global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce.Gtc) {
        output.WriteRawTag(56);
        output.WriteEnum((int) TimeInForce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChildOrderType);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (Size != 0D) {
        size += 1 + 8;
      }
      if (MinuteToExpire != 0D) {
        size += 1 + 8;
      }
      if (TimeInForce != global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce.Gtc) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TimeInForce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PostChildOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.ChildOrderType != global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType.None) {
        ChildOrderType = other.ChildOrderType;
      }
      if (other.Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        Side = other.Side;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.Size != 0D) {
        Size = other.Size;
      }
      if (other.MinuteToExpire != 0D) {
        MinuteToExpire = other.MinuteToExpire;
      }
      if (other.TimeInForce != global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce.Gtc) {
        TimeInForce = other.TimeInForce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 16: {
            ChildOrderType = (global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType) input.ReadEnum();
            break;
          }
          case 24: {
            Side = (global::CrossTrader.Models.Remoting.OrderSide) input.ReadEnum();
            break;
          }
          case 33: {
            Price = input.ReadDouble();
            break;
          }
          case 41: {
            Size = input.ReadDouble();
            break;
          }
          case 49: {
            MinuteToExpire = input.ReadDouble();
            break;
          }
          case 56: {
            TimeInForce = (global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 16: {
            ChildOrderType = (global::CrossTrader.Models.Remoting.BitFlyer.ChildOrderType) input.ReadEnum();
            break;
          }
          case 24: {
            Side = (global::CrossTrader.Models.Remoting.OrderSide) input.ReadEnum();
            break;
          }
          case 33: {
            Price = input.ReadDouble();
            break;
          }
          case 41: {
            Size = input.ReadDouble();
            break;
          }
          case 49: {
            MinuteToExpire = input.ReadDouble();
            break;
          }
          case 56: {
            TimeInForce = (global::CrossTrader.Models.Remoting.BitFlyer.TimeInForce) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class PostChildOrderResponse : pb::IMessage<PostChildOrderResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PostChildOrderResponse> _parser = new pb::MessageParser<PostChildOrderResponse>(() => new PostChildOrderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PostChildOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.BitFlyer.OrdersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostChildOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostChildOrderResponse(PostChildOrderResponse other) : this() {
      childOrderAcceptanceId_ = other.childOrderAcceptanceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostChildOrderResponse Clone() {
      return new PostChildOrderResponse(this);
    }

    /// <summary>Field number for the "child_order_acceptance_id" field.</summary>
    public const int ChildOrderAcceptanceIdFieldNumber = 1;
    private string childOrderAcceptanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChildOrderAcceptanceId {
      get { return childOrderAcceptanceId_; }
      set {
        childOrderAcceptanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PostChildOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PostChildOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChildOrderAcceptanceId != other.ChildOrderAcceptanceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ChildOrderAcceptanceId.Length != 0) hash ^= ChildOrderAcceptanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChildOrderAcceptanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChildOrderAcceptanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChildOrderAcceptanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChildOrderAcceptanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ChildOrderAcceptanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildOrderAcceptanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PostChildOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.ChildOrderAcceptanceId.Length != 0) {
        ChildOrderAcceptanceId = other.ChildOrderAcceptanceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChildOrderAcceptanceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ChildOrderAcceptanceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class CancelChildOrderRequest : pb::IMessage<CancelChildOrderRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelChildOrderRequest> _parser = new pb::MessageParser<CancelChildOrderRequest>(() => new CancelChildOrderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelChildOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.BitFlyer.OrdersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelChildOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelChildOrderRequest(CancelChildOrderRequest other) : this() {
      instrumentId_ = other.instrumentId_;
      childOrderId_ = other.childOrderId_;
      childOrderAcceptanceId_ = other.childOrderAcceptanceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelChildOrderRequest Clone() {
      return new CancelChildOrderRequest(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "child_order_id" field.</summary>
    public const int ChildOrderIdFieldNumber = 2;
    private string childOrderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChildOrderId {
      get { return childOrderId_; }
      set {
        childOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "child_order_acceptance_id" field.</summary>
    public const int ChildOrderAcceptanceIdFieldNumber = 3;
    private string childOrderAcceptanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChildOrderAcceptanceId {
      get { return childOrderAcceptanceId_; }
      set {
        childOrderAcceptanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelChildOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelChildOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (ChildOrderId != other.ChildOrderId) return false;
      if (ChildOrderAcceptanceId != other.ChildOrderAcceptanceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (ChildOrderId.Length != 0) hash ^= ChildOrderId.GetHashCode();
      if (ChildOrderAcceptanceId.Length != 0) hash ^= ChildOrderAcceptanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (ChildOrderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildOrderId);
      }
      if (ChildOrderAcceptanceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChildOrderAcceptanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (ChildOrderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildOrderId);
      }
      if (ChildOrderAcceptanceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChildOrderAcceptanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (ChildOrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildOrderId);
      }
      if (ChildOrderAcceptanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildOrderAcceptanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelChildOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.ChildOrderId.Length != 0) {
        ChildOrderId = other.ChildOrderId;
      }
      if (other.ChildOrderAcceptanceId.Length != 0) {
        ChildOrderAcceptanceId = other.ChildOrderAcceptanceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 18: {
            ChildOrderId = input.ReadString();
            break;
          }
          case 26: {
            ChildOrderAcceptanceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 18: {
            ChildOrderId = input.ReadString();
            break;
          }
          case 26: {
            ChildOrderAcceptanceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
