// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bitFlyer/orders.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace CrossTrader.Models.Remoting.BitFlyer {
  internal static partial class OrdersService
  {
    static readonly string __ServiceName = "crosstrader.bitflyer.OrdersService";

    static readonly grpc::Marshaller<global::CrossTrader.Models.Remoting.InstrumentIdRequest> __Marshaller_crosstrader_InstrumentIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrossTrader.Models.Remoting.InstrumentIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrossTrader.Models.Remoting.BitFlyer.ChildOrdersResponse> __Marshaller_crosstrader_bitflyer_ChildOrdersResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrossTrader.Models.Remoting.BitFlyer.ChildOrdersResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest> __Marshaller_crosstrader_bitflyer_PostChildOrderRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse> __Marshaller_crosstrader_bitflyer_PostChildOrderResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest> __Marshaller_crosstrader_bitflyer_CancelChildOrderRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::CrossTrader.Models.Remoting.InstrumentIdRequest, global::CrossTrader.Models.Remoting.BitFlyer.ChildOrdersResponse> __Method_SubscribeChildOrders = new grpc::Method<global::CrossTrader.Models.Remoting.InstrumentIdRequest, global::CrossTrader.Models.Remoting.BitFlyer.ChildOrdersResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeChildOrders",
        __Marshaller_crosstrader_InstrumentIdRequest,
        __Marshaller_crosstrader_bitflyer_ChildOrdersResponse);

    static readonly grpc::Method<global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest, global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse> __Method_PostChildOrder = new grpc::Method<global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest, global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostChildOrder",
        __Marshaller_crosstrader_bitflyer_PostChildOrderRequest,
        __Marshaller_crosstrader_bitflyer_PostChildOrderResponse);

    static readonly grpc::Method<global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CancelChildOrder = new grpc::Method<global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelChildOrder",
        __Marshaller_crosstrader_bitflyer_CancelChildOrderRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::CrossTrader.Models.Remoting.InstrumentIdRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CancelAllChildOrders = new grpc::Method<global::CrossTrader.Models.Remoting.InstrumentIdRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelAllChildOrders",
        __Marshaller_crosstrader_InstrumentIdRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::CrossTrader.Models.Remoting.BitFlyer.OrdersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for OrdersService</summary>
    public partial class OrdersServiceClient : grpc::ClientBase<OrdersServiceClient>
    {
      /// <summary>Creates a new client for OrdersService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public OrdersServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OrdersService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public OrdersServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected OrdersServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected OrdersServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::CrossTrader.Models.Remoting.BitFlyer.ChildOrdersResponse> SubscribeChildOrders(global::CrossTrader.Models.Remoting.InstrumentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeChildOrders(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::CrossTrader.Models.Remoting.BitFlyer.ChildOrdersResponse> SubscribeChildOrders(global::CrossTrader.Models.Remoting.InstrumentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeChildOrders, null, options, request);
      }
      public virtual global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse PostChildOrder(global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostChildOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse PostChildOrder(global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostChildOrder, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse> PostChildOrderAsync(global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostChildOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderResponse> PostChildOrderAsync(global::CrossTrader.Models.Remoting.BitFlyer.PostChildOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostChildOrder, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelChildOrder(global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelChildOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelChildOrder(global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelChildOrder, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CancelChildOrderAsync(global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelChildOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CancelChildOrderAsync(global::CrossTrader.Models.Remoting.BitFlyer.CancelChildOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelChildOrder, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelAllChildOrders(global::CrossTrader.Models.Remoting.InstrumentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelAllChildOrders(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelAllChildOrders(global::CrossTrader.Models.Remoting.InstrumentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelAllChildOrders, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CancelAllChildOrdersAsync(global::CrossTrader.Models.Remoting.InstrumentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelAllChildOrdersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CancelAllChildOrdersAsync(global::CrossTrader.Models.Remoting.InstrumentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelAllChildOrders, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override OrdersServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OrdersServiceClient(configuration);
      }
    }

  }
}
#endregion
