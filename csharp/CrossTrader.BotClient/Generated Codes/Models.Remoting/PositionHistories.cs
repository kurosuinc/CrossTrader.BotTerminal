// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: position_histories.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CrossTrader.Models.Remoting {

  /// <summary>Holder for reflection information generated from position_histories.proto</summary>
  internal static partial class PositionHistoriesReflection {

    #region Descriptor
    /// <summary>File descriptor for position_histories.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PositionHistoriesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhwb3NpdGlvbl9oaXN0b3JpZXMucHJvdG8SC2Nyb3NzdHJhZGVyGgxjb21t",
            "b24ucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90bxofZ29v",
            "Z2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byLYAQoTT3JkZXJIaXN0b3J5",
            "UmVxdWVzdBIVCg1pbnN0cnVtZW50X2lkGAEgASgFEi0KCnRpbWVfZnJhbWUY",
            "AiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SJAoEc2lkZRgDIAEo",
            "DjIWLmNyb3NzdHJhZGVyLk9yZGVyU2lkZRIqCgZiZWZvcmUYBCABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEikKBWFmdGVyGAUgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcCKwAQoaUG9zaXRpb25IaXN0b3J5SXRl",
            "bU1lc3NhZ2USJAoEc2lkZRgBIAEoDjIWLmNyb3NzdHJhZGVyLk9yZGVyU2lk",
            "ZRItCglvcGVuZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEi0KCnRpbWVfZnJhbWUYAyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVy",
            "YXRpb24SDgoGdm9sdW1lGAQgASgBInQKFlBvc2l0aW9uSGlzdG9yeU1lc3Nh",
            "Z2USFQoNaW5zdHJ1bWVudF9pZBgBIAEoBRJDChJwb3NpdGlvbl9oaXN0b3Jp",
            "ZXMYAiADKAsyJy5jcm9zc3RyYWRlci5Qb3NpdGlvbkhpc3RvcnlJdGVtTWVz",
            "c2FnZTLaAQoWUG9zaXRpb25IaXN0b3J5U2VydmljZRJbChJnZXRQb3NpdGlv",
            "bkhpc3RvcnkSIC5jcm9zc3RyYWRlci5PcmRlckhpc3RvcnlSZXF1ZXN0GiMu",
            "Y3Jvc3N0cmFkZXIuUG9zaXRpb25IaXN0b3J5TWVzc2FnZRJjChhzdWJzY3Jp",
            "YmVQb3NpdGlvbkhpc3RvcnkSIC5jcm9zc3RyYWRlci5PcmRlckhpc3RvcnlS",
            "ZXF1ZXN0GiMuY3Jvc3N0cmFkZXIuUG9zaXRpb25IaXN0b3J5TWVzc2FnZTAB",
            "Qh6qAhtDcm9zc1RyYWRlci5Nb2RlbHMuUmVtb3RpbmdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CrossTrader.Models.Remoting.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.OrderHistoryRequest), global::CrossTrader.Models.Remoting.OrderHistoryRequest.Parser, new[]{ "InstrumentId", "TimeFrame", "Side", "Before", "After" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.PositionHistoryItemMessage), global::CrossTrader.Models.Remoting.PositionHistoryItemMessage.Parser, new[]{ "Side", "OpenedAt", "TimeFrame", "Volume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.PositionHistoryMessage), global::CrossTrader.Models.Remoting.PositionHistoryMessage.Parser, new[]{ "InstrumentId", "PositionHistories" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class OrderHistoryRequest : pb::IMessage<OrderHistoryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderHistoryRequest> _parser = new pb::MessageParser<OrderHistoryRequest>(() => new OrderHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.PositionHistoriesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderHistoryRequest(OrderHistoryRequest other) : this() {
      instrumentId_ = other.instrumentId_;
      timeFrame_ = other.timeFrame_ != null ? other.timeFrame_.Clone() : null;
      side_ = other.side_;
      before_ = other.before_ != null ? other.before_.Clone() : null;
      after_ = other.after_ != null ? other.after_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderHistoryRequest Clone() {
      return new OrderHistoryRequest(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "time_frame" field.</summary>
    public const int TimeFrameFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration timeFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeFrame {
      get { return timeFrame_; }
      set {
        timeFrame_ = value;
      }
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 3;
    private global::CrossTrader.Models.Remoting.OrderSide side_ = global::CrossTrader.Models.Remoting.OrderSide.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.OrderSide Side {
      get { return side_; }
      set {
        side_ = value;
      }
    }

    /// <summary>Field number for the "before" field.</summary>
    public const int BeforeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp before_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Before {
      get { return before_; }
      set {
        before_ = value;
      }
    }

    /// <summary>Field number for the "after" field.</summary>
    public const int AfterFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp after_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp After {
      get { return after_; }
      set {
        after_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (!object.Equals(TimeFrame, other.TimeFrame)) return false;
      if (Side != other.Side) return false;
      if (!object.Equals(Before, other.Before)) return false;
      if (!object.Equals(After, other.After)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (timeFrame_ != null) hash ^= TimeFrame.GetHashCode();
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) hash ^= Side.GetHashCode();
      if (before_ != null) hash ^= Before.GetHashCode();
      if (after_ != null) hash ^= After.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (timeFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeFrame);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Side);
      }
      if (before_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Before);
      }
      if (after_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(After);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (timeFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeFrame);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Side);
      }
      if (before_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Before);
      }
      if (after_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(After);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (timeFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeFrame);
      }
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
      }
      if (before_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Before);
      }
      if (after_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(After);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.timeFrame_ != null) {
        if (timeFrame_ == null) {
          TimeFrame = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeFrame.MergeFrom(other.TimeFrame);
      }
      if (other.Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        Side = other.Side;
      }
      if (other.before_ != null) {
        if (before_ == null) {
          Before = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Before.MergeFrom(other.Before);
      }
      if (other.after_ != null) {
        if (after_ == null) {
          After = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        After.MergeFrom(other.After);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 18: {
            if (timeFrame_ == null) {
              TimeFrame = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeFrame);
            break;
          }
          case 24: {
            Side = (global::CrossTrader.Models.Remoting.OrderSide) input.ReadEnum();
            break;
          }
          case 34: {
            if (before_ == null) {
              Before = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Before);
            break;
          }
          case 42: {
            if (after_ == null) {
              After = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(After);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 18: {
            if (timeFrame_ == null) {
              TimeFrame = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeFrame);
            break;
          }
          case 24: {
            Side = (global::CrossTrader.Models.Remoting.OrderSide) input.ReadEnum();
            break;
          }
          case 34: {
            if (before_ == null) {
              Before = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Before);
            break;
          }
          case 42: {
            if (after_ == null) {
              After = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(After);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class PositionHistoryItemMessage : pb::IMessage<PositionHistoryItemMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionHistoryItemMessage> _parser = new pb::MessageParser<PositionHistoryItemMessage>(() => new PositionHistoryItemMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PositionHistoryItemMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.PositionHistoriesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionHistoryItemMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionHistoryItemMessage(PositionHistoryItemMessage other) : this() {
      side_ = other.side_;
      openedAt_ = other.openedAt_ != null ? other.openedAt_.Clone() : null;
      timeFrame_ = other.timeFrame_ != null ? other.timeFrame_.Clone() : null;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionHistoryItemMessage Clone() {
      return new PositionHistoryItemMessage(this);
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 1;
    private global::CrossTrader.Models.Remoting.OrderSide side_ = global::CrossTrader.Models.Remoting.OrderSide.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.OrderSide Side {
      get { return side_; }
      set {
        side_ = value;
      }
    }

    /// <summary>Field number for the "opened_at" field.</summary>
    public const int OpenedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp openedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OpenedAt {
      get { return openedAt_; }
      set {
        openedAt_ = value;
      }
    }

    /// <summary>Field number for the "time_frame" field.</summary>
    public const int TimeFrameFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration timeFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeFrame {
      get { return timeFrame_; }
      set {
        timeFrame_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private double volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PositionHistoryItemMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PositionHistoryItemMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Side != other.Side) return false;
      if (!object.Equals(OpenedAt, other.OpenedAt)) return false;
      if (!object.Equals(TimeFrame, other.TimeFrame)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) hash ^= Side.GetHashCode();
      if (openedAt_ != null) hash ^= OpenedAt.GetHashCode();
      if (timeFrame_ != null) hash ^= TimeFrame.GetHashCode();
      if (Volume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Side);
      }
      if (openedAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OpenedAt);
      }
      if (timeFrame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TimeFrame);
      }
      if (Volume != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Side);
      }
      if (openedAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OpenedAt);
      }
      if (timeFrame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TimeFrame);
      }
      if (Volume != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
      }
      if (openedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpenedAt);
      }
      if (timeFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeFrame);
      }
      if (Volume != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PositionHistoryItemMessage other) {
      if (other == null) {
        return;
      }
      if (other.Side != global::CrossTrader.Models.Remoting.OrderSide.None) {
        Side = other.Side;
      }
      if (other.openedAt_ != null) {
        if (openedAt_ == null) {
          OpenedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OpenedAt.MergeFrom(other.OpenedAt);
      }
      if (other.timeFrame_ != null) {
        if (timeFrame_ == null) {
          TimeFrame = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeFrame.MergeFrom(other.TimeFrame);
      }
      if (other.Volume != 0D) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Side = (global::CrossTrader.Models.Remoting.OrderSide) input.ReadEnum();
            break;
          }
          case 18: {
            if (openedAt_ == null) {
              OpenedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OpenedAt);
            break;
          }
          case 26: {
            if (timeFrame_ == null) {
              TimeFrame = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeFrame);
            break;
          }
          case 33: {
            Volume = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Side = (global::CrossTrader.Models.Remoting.OrderSide) input.ReadEnum();
            break;
          }
          case 18: {
            if (openedAt_ == null) {
              OpenedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OpenedAt);
            break;
          }
          case 26: {
            if (timeFrame_ == null) {
              TimeFrame = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeFrame);
            break;
          }
          case 33: {
            Volume = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class PositionHistoryMessage : pb::IMessage<PositionHistoryMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionHistoryMessage> _parser = new pb::MessageParser<PositionHistoryMessage>(() => new PositionHistoryMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PositionHistoryMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.PositionHistoriesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionHistoryMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionHistoryMessage(PositionHistoryMessage other) : this() {
      instrumentId_ = other.instrumentId_;
      positionHistories_ = other.positionHistories_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionHistoryMessage Clone() {
      return new PositionHistoryMessage(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "position_histories" field.</summary>
    public const int PositionHistoriesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CrossTrader.Models.Remoting.PositionHistoryItemMessage> _repeated_positionHistories_codec
        = pb::FieldCodec.ForMessage(18, global::CrossTrader.Models.Remoting.PositionHistoryItemMessage.Parser);
    private readonly pbc::RepeatedField<global::CrossTrader.Models.Remoting.PositionHistoryItemMessage> positionHistories_ = new pbc::RepeatedField<global::CrossTrader.Models.Remoting.PositionHistoryItemMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CrossTrader.Models.Remoting.PositionHistoryItemMessage> PositionHistories {
      get { return positionHistories_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PositionHistoryMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PositionHistoryMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if(!positionHistories_.Equals(other.positionHistories_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      hash ^= positionHistories_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      positionHistories_.WriteTo(output, _repeated_positionHistories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      positionHistories_.WriteTo(ref output, _repeated_positionHistories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      size += positionHistories_.CalculateSize(_repeated_positionHistories_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PositionHistoryMessage other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      positionHistories_.Add(other.positionHistories_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 18: {
            positionHistories_.AddEntriesFrom(input, _repeated_positionHistories_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 18: {
            positionHistories_.AddEntriesFrom(ref input, _repeated_positionHistories_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
