// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: orderbooks.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CrossTrader.Models.Remoting {

  /// <summary>Holder for reflection information generated from orderbooks.proto</summary>
  internal static partial class OrderbooksReflection {

    #region Descriptor
    /// <summary>File descriptor for orderbooks.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderbooksReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBvcmRlcmJvb2tzLnByb3RvEgtjcm9zc3RyYWRlciJSChBPcmRlckJvb2tS",
            "ZXF1ZXN0EhUKDWluc3RydW1lbnRfaWQYASABKAUSEgoKZ3JvdXBfc2l6ZRgC",
            "IAEoARITCgtsZXZlbF9jb3VudBgDIAEoBSJsChhPcmRlckJvb2tTbmFwc2hv",
            "dFJlcXVlc3QSFQoNaW5zdHJ1bWVudF9pZBgBIAEoBRISCgpncm91cF9zaXpl",
            "GAIgASgBEhMKC2xldmVsX2NvdW50GAMgASgFEhAKCGludGVydmFsGAQgASgF",
            "IjcKEU9yZGVyTGV2ZWxNZXNzYWdlEhIKCmxvd2VyYm91bmQYASABKAESDgoG",
            "dm9sdW1lGAIgASgBIm8KEU9yZGVyQm9va1Jlc3BvbnNlEiwKBGFza3MYASAD",
            "KAsyHi5jcm9zc3RyYWRlci5PcmRlckxldmVsTWVzc2FnZRIsCgRiaWRzGAIg",
            "AygLMh4uY3Jvc3N0cmFkZXIuT3JkZXJMZXZlbE1lc3NhZ2UiWgoXVW5pZmll",
            "ZE9yZGVyQm9va1JlcXVlc3QSFgoOaW5zdHJ1bWVudF9pZHMYASADKAUSEgoK",
            "Z3JvdXBfc2l6ZRgCIAEoARITCgtsZXZlbF9jb3VudBgDIAEoBSJ0Ch9Vbmlm",
            "aWVkT3JkZXJCb29rU25hcHNob3RSZXF1ZXN0EhYKDmluc3RydW1lbnRfaWRz",
            "GAEgAygFEhIKCmdyb3VwX3NpemUYAiABKAESEwoLbGV2ZWxfY291bnQYAyAB",
            "KAUSEAoIaW50ZXJ2YWwYBCABKAUiSgoYVW5pZmllZE9yZGVyTGV2ZWxNZXNz",
            "YWdlEhIKCmxvd2VyYm91bmQYASABKAESDAoEYXNrcxgCIAMoARIMCgRiaWRz",
            "GAMgAygBIoQBChhVbmlmaWVkT3JkZXJCb29rUmVzcG9uc2USMwoEYXNrcxgB",
            "IAMoCzIlLmNyb3NzdHJhZGVyLlVuaWZpZWRPcmRlckxldmVsTWVzc2FnZRIz",
            "CgRiaWRzGAIgAygLMiUuY3Jvc3N0cmFkZXIuVW5pZmllZE9yZGVyTGV2ZWxN",
            "ZXNzYWdlMtABChBPcmRlckJvb2tTZXJ2aWNlElUKElN1YnNjcmliZU9yZGVy",
            "Qm9vaxIdLmNyb3NzdHJhZGVyLk9yZGVyQm9va1JlcXVlc3QaHi5jcm9zc3Ry",
            "YWRlci5PcmRlckJvb2tSZXNwb25zZTABEmUKGlN1YnNjcmliZU9yZGVyQm9v",
            "a1NuYXBzaG90EiUuY3Jvc3N0cmFkZXIuT3JkZXJCb29rU25hcHNob3RSZXF1",
            "ZXN0Gh4uY3Jvc3N0cmFkZXIuT3JkZXJCb29rUmVzcG9uc2UwATKBAgoXVW5p",
            "ZmllZE9yZGVyQm9va1NlcnZpY2USagoZU3Vic2NyaWJlVW5pZmllZE9yZGVy",
            "Qm9vaxIkLmNyb3NzdHJhZGVyLlVuaWZpZWRPcmRlckJvb2tSZXF1ZXN0GiUu",
            "Y3Jvc3N0cmFkZXIuVW5pZmllZE9yZGVyQm9va1Jlc3BvbnNlMAESegohU3Vi",
            "c2NyaWJlVW5pZmllZE9yZGVyQm9va1NuYXBzaG90EiwuY3Jvc3N0cmFkZXIu",
            "VW5pZmllZE9yZGVyQm9va1NuYXBzaG90UmVxdWVzdBolLmNyb3NzdHJhZGVy",
            "LlVuaWZpZWRPcmRlckJvb2tSZXNwb25zZTABQh6qAhtDcm9zc1RyYWRlci5N",
            "b2RlbHMuUmVtb3RpbmdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.OrderBookRequest), global::CrossTrader.Models.Remoting.OrderBookRequest.Parser, new[]{ "InstrumentId", "GroupSize", "LevelCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.OrderBookSnapshotRequest), global::CrossTrader.Models.Remoting.OrderBookSnapshotRequest.Parser, new[]{ "InstrumentId", "GroupSize", "LevelCount", "Interval" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.OrderLevelMessage), global::CrossTrader.Models.Remoting.OrderLevelMessage.Parser, new[]{ "Lowerbound", "Volume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.OrderBookResponse), global::CrossTrader.Models.Remoting.OrderBookResponse.Parser, new[]{ "Asks", "Bids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.UnifiedOrderBookRequest), global::CrossTrader.Models.Remoting.UnifiedOrderBookRequest.Parser, new[]{ "InstrumentIds", "GroupSize", "LevelCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.UnifiedOrderBookSnapshotRequest), global::CrossTrader.Models.Remoting.UnifiedOrderBookSnapshotRequest.Parser, new[]{ "InstrumentIds", "GroupSize", "LevelCount", "Interval" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage), global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage.Parser, new[]{ "Lowerbound", "Asks", "Bids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.UnifiedOrderBookResponse), global::CrossTrader.Models.Remoting.UnifiedOrderBookResponse.Parser, new[]{ "Asks", "Bids" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class OrderBookRequest : pb::IMessage<OrderBookRequest> {
    private static readonly pb::MessageParser<OrderBookRequest> _parser = new pb::MessageParser<OrderBookRequest>(() => new OrderBookRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderBookRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.OrderbooksReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookRequest(OrderBookRequest other) : this() {
      instrumentId_ = other.instrumentId_;
      groupSize_ = other.groupSize_;
      levelCount_ = other.levelCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookRequest Clone() {
      return new OrderBookRequest(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "group_size" field.</summary>
    public const int GroupSizeFieldNumber = 2;
    private double groupSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GroupSize {
      get { return groupSize_; }
      set {
        groupSize_ = value;
      }
    }

    /// <summary>Field number for the "level_count" field.</summary>
    public const int LevelCountFieldNumber = 3;
    private int levelCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelCount {
      get { return levelCount_; }
      set {
        levelCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderBookRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderBookRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GroupSize, other.GroupSize)) return false;
      if (LevelCount != other.LevelCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (GroupSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GroupSize);
      if (LevelCount != 0) hash ^= LevelCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (GroupSize != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(GroupSize);
      }
      if (LevelCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LevelCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (GroupSize != 0D) {
        size += 1 + 8;
      }
      if (LevelCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderBookRequest other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.GroupSize != 0D) {
        GroupSize = other.GroupSize;
      }
      if (other.LevelCount != 0) {
        LevelCount = other.LevelCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 17: {
            GroupSize = input.ReadDouble();
            break;
          }
          case 24: {
            LevelCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class OrderBookSnapshotRequest : pb::IMessage<OrderBookSnapshotRequest> {
    private static readonly pb::MessageParser<OrderBookSnapshotRequest> _parser = new pb::MessageParser<OrderBookSnapshotRequest>(() => new OrderBookSnapshotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderBookSnapshotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.OrderbooksReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookSnapshotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookSnapshotRequest(OrderBookSnapshotRequest other) : this() {
      instrumentId_ = other.instrumentId_;
      groupSize_ = other.groupSize_;
      levelCount_ = other.levelCount_;
      interval_ = other.interval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookSnapshotRequest Clone() {
      return new OrderBookSnapshotRequest(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "group_size" field.</summary>
    public const int GroupSizeFieldNumber = 2;
    private double groupSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GroupSize {
      get { return groupSize_; }
      set {
        groupSize_ = value;
      }
    }

    /// <summary>Field number for the "level_count" field.</summary>
    public const int LevelCountFieldNumber = 3;
    private int levelCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelCount {
      get { return levelCount_; }
      set {
        levelCount_ = value;
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 4;
    private int interval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderBookSnapshotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderBookSnapshotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GroupSize, other.GroupSize)) return false;
      if (LevelCount != other.LevelCount) return false;
      if (Interval != other.Interval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (GroupSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GroupSize);
      if (LevelCount != 0) hash ^= LevelCount.GetHashCode();
      if (Interval != 0) hash ^= Interval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (GroupSize != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(GroupSize);
      }
      if (LevelCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LevelCount);
      }
      if (Interval != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Interval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (GroupSize != 0D) {
        size += 1 + 8;
      }
      if (LevelCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelCount);
      }
      if (Interval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Interval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderBookSnapshotRequest other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.GroupSize != 0D) {
        GroupSize = other.GroupSize;
      }
      if (other.LevelCount != 0) {
        LevelCount = other.LevelCount;
      }
      if (other.Interval != 0) {
        Interval = other.Interval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 17: {
            GroupSize = input.ReadDouble();
            break;
          }
          case 24: {
            LevelCount = input.ReadInt32();
            break;
          }
          case 32: {
            Interval = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class OrderLevelMessage : pb::IMessage<OrderLevelMessage> {
    private static readonly pb::MessageParser<OrderLevelMessage> _parser = new pb::MessageParser<OrderLevelMessage>(() => new OrderLevelMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderLevelMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.OrderbooksReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderLevelMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderLevelMessage(OrderLevelMessage other) : this() {
      lowerbound_ = other.lowerbound_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderLevelMessage Clone() {
      return new OrderLevelMessage(this);
    }

    /// <summary>Field number for the "lowerbound" field.</summary>
    public const int LowerboundFieldNumber = 1;
    private double lowerbound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lowerbound {
      get { return lowerbound_; }
      set {
        lowerbound_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 2;
    private double volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderLevelMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderLevelMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lowerbound, other.Lowerbound)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lowerbound != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lowerbound);
      if (Volume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lowerbound != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Lowerbound);
      }
      if (Volume != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lowerbound != 0D) {
        size += 1 + 8;
      }
      if (Volume != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderLevelMessage other) {
      if (other == null) {
        return;
      }
      if (other.Lowerbound != 0D) {
        Lowerbound = other.Lowerbound;
      }
      if (other.Volume != 0D) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Lowerbound = input.ReadDouble();
            break;
          }
          case 17: {
            Volume = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class OrderBookResponse : pb::IMessage<OrderBookResponse> {
    private static readonly pb::MessageParser<OrderBookResponse> _parser = new pb::MessageParser<OrderBookResponse>(() => new OrderBookResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderBookResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.OrderbooksReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookResponse(OrderBookResponse other) : this() {
      asks_ = other.asks_.Clone();
      bids_ = other.bids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookResponse Clone() {
      return new OrderBookResponse(this);
    }

    /// <summary>Field number for the "asks" field.</summary>
    public const int AsksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::CrossTrader.Models.Remoting.OrderLevelMessage> _repeated_asks_codec
        = pb::FieldCodec.ForMessage(10, global::CrossTrader.Models.Remoting.OrderLevelMessage.Parser);
    private readonly pbc::RepeatedField<global::CrossTrader.Models.Remoting.OrderLevelMessage> asks_ = new pbc::RepeatedField<global::CrossTrader.Models.Remoting.OrderLevelMessage>();
    /// <summary>
    /// asks
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CrossTrader.Models.Remoting.OrderLevelMessage> Asks {
      get { return asks_; }
    }

    /// <summary>Field number for the "bids" field.</summary>
    public const int BidsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CrossTrader.Models.Remoting.OrderLevelMessage> _repeated_bids_codec
        = pb::FieldCodec.ForMessage(18, global::CrossTrader.Models.Remoting.OrderLevelMessage.Parser);
    private readonly pbc::RepeatedField<global::CrossTrader.Models.Remoting.OrderLevelMessage> bids_ = new pbc::RepeatedField<global::CrossTrader.Models.Remoting.OrderLevelMessage>();
    /// <summary>
    /// bids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CrossTrader.Models.Remoting.OrderLevelMessage> Bids {
      get { return bids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderBookResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderBookResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!asks_.Equals(other.asks_)) return false;
      if(!bids_.Equals(other.bids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= asks_.GetHashCode();
      hash ^= bids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      asks_.WriteTo(output, _repeated_asks_codec);
      bids_.WriteTo(output, _repeated_bids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += asks_.CalculateSize(_repeated_asks_codec);
      size += bids_.CalculateSize(_repeated_bids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderBookResponse other) {
      if (other == null) {
        return;
      }
      asks_.Add(other.asks_);
      bids_.Add(other.bids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            asks_.AddEntriesFrom(input, _repeated_asks_codec);
            break;
          }
          case 18: {
            bids_.AddEntriesFrom(input, _repeated_bids_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UnifiedOrderBookRequest : pb::IMessage<UnifiedOrderBookRequest> {
    private static readonly pb::MessageParser<UnifiedOrderBookRequest> _parser = new pb::MessageParser<UnifiedOrderBookRequest>(() => new UnifiedOrderBookRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnifiedOrderBookRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.OrderbooksReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookRequest(UnifiedOrderBookRequest other) : this() {
      instrumentIds_ = other.instrumentIds_.Clone();
      groupSize_ = other.groupSize_;
      levelCount_ = other.levelCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookRequest Clone() {
      return new UnifiedOrderBookRequest(this);
    }

    /// <summary>Field number for the "instrument_ids" field.</summary>
    public const int InstrumentIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_instrumentIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> instrumentIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> InstrumentIds {
      get { return instrumentIds_; }
    }

    /// <summary>Field number for the "group_size" field.</summary>
    public const int GroupSizeFieldNumber = 2;
    private double groupSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GroupSize {
      get { return groupSize_; }
      set {
        groupSize_ = value;
      }
    }

    /// <summary>Field number for the "level_count" field.</summary>
    public const int LevelCountFieldNumber = 3;
    private int levelCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelCount {
      get { return levelCount_; }
      set {
        levelCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnifiedOrderBookRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnifiedOrderBookRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!instrumentIds_.Equals(other.instrumentIds_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GroupSize, other.GroupSize)) return false;
      if (LevelCount != other.LevelCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= instrumentIds_.GetHashCode();
      if (GroupSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GroupSize);
      if (LevelCount != 0) hash ^= LevelCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      instrumentIds_.WriteTo(output, _repeated_instrumentIds_codec);
      if (GroupSize != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(GroupSize);
      }
      if (LevelCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LevelCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += instrumentIds_.CalculateSize(_repeated_instrumentIds_codec);
      if (GroupSize != 0D) {
        size += 1 + 8;
      }
      if (LevelCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnifiedOrderBookRequest other) {
      if (other == null) {
        return;
      }
      instrumentIds_.Add(other.instrumentIds_);
      if (other.GroupSize != 0D) {
        GroupSize = other.GroupSize;
      }
      if (other.LevelCount != 0) {
        LevelCount = other.LevelCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            instrumentIds_.AddEntriesFrom(input, _repeated_instrumentIds_codec);
            break;
          }
          case 17: {
            GroupSize = input.ReadDouble();
            break;
          }
          case 24: {
            LevelCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UnifiedOrderBookSnapshotRequest : pb::IMessage<UnifiedOrderBookSnapshotRequest> {
    private static readonly pb::MessageParser<UnifiedOrderBookSnapshotRequest> _parser = new pb::MessageParser<UnifiedOrderBookSnapshotRequest>(() => new UnifiedOrderBookSnapshotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnifiedOrderBookSnapshotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.OrderbooksReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookSnapshotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookSnapshotRequest(UnifiedOrderBookSnapshotRequest other) : this() {
      instrumentIds_ = other.instrumentIds_.Clone();
      groupSize_ = other.groupSize_;
      levelCount_ = other.levelCount_;
      interval_ = other.interval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookSnapshotRequest Clone() {
      return new UnifiedOrderBookSnapshotRequest(this);
    }

    /// <summary>Field number for the "instrument_ids" field.</summary>
    public const int InstrumentIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_instrumentIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> instrumentIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> InstrumentIds {
      get { return instrumentIds_; }
    }

    /// <summary>Field number for the "group_size" field.</summary>
    public const int GroupSizeFieldNumber = 2;
    private double groupSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GroupSize {
      get { return groupSize_; }
      set {
        groupSize_ = value;
      }
    }

    /// <summary>Field number for the "level_count" field.</summary>
    public const int LevelCountFieldNumber = 3;
    private int levelCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelCount {
      get { return levelCount_; }
      set {
        levelCount_ = value;
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 4;
    private int interval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnifiedOrderBookSnapshotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnifiedOrderBookSnapshotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!instrumentIds_.Equals(other.instrumentIds_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GroupSize, other.GroupSize)) return false;
      if (LevelCount != other.LevelCount) return false;
      if (Interval != other.Interval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= instrumentIds_.GetHashCode();
      if (GroupSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GroupSize);
      if (LevelCount != 0) hash ^= LevelCount.GetHashCode();
      if (Interval != 0) hash ^= Interval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      instrumentIds_.WriteTo(output, _repeated_instrumentIds_codec);
      if (GroupSize != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(GroupSize);
      }
      if (LevelCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LevelCount);
      }
      if (Interval != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Interval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += instrumentIds_.CalculateSize(_repeated_instrumentIds_codec);
      if (GroupSize != 0D) {
        size += 1 + 8;
      }
      if (LevelCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelCount);
      }
      if (Interval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Interval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnifiedOrderBookSnapshotRequest other) {
      if (other == null) {
        return;
      }
      instrumentIds_.Add(other.instrumentIds_);
      if (other.GroupSize != 0D) {
        GroupSize = other.GroupSize;
      }
      if (other.LevelCount != 0) {
        LevelCount = other.LevelCount;
      }
      if (other.Interval != 0) {
        Interval = other.Interval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            instrumentIds_.AddEntriesFrom(input, _repeated_instrumentIds_codec);
            break;
          }
          case 17: {
            GroupSize = input.ReadDouble();
            break;
          }
          case 24: {
            LevelCount = input.ReadInt32();
            break;
          }
          case 32: {
            Interval = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UnifiedOrderLevelMessage : pb::IMessage<UnifiedOrderLevelMessage> {
    private static readonly pb::MessageParser<UnifiedOrderLevelMessage> _parser = new pb::MessageParser<UnifiedOrderLevelMessage>(() => new UnifiedOrderLevelMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnifiedOrderLevelMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.OrderbooksReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderLevelMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderLevelMessage(UnifiedOrderLevelMessage other) : this() {
      lowerbound_ = other.lowerbound_;
      asks_ = other.asks_.Clone();
      bids_ = other.bids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderLevelMessage Clone() {
      return new UnifiedOrderLevelMessage(this);
    }

    /// <summary>Field number for the "lowerbound" field.</summary>
    public const int LowerboundFieldNumber = 1;
    private double lowerbound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lowerbound {
      get { return lowerbound_; }
      set {
        lowerbound_ = value;
      }
    }

    /// <summary>Field number for the "asks" field.</summary>
    public const int AsksFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_asks_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> asks_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Asks {
      get { return asks_; }
    }

    /// <summary>Field number for the "bids" field.</summary>
    public const int BidsFieldNumber = 3;
    private static readonly pb::FieldCodec<double> _repeated_bids_codec
        = pb::FieldCodec.ForDouble(26);
    private readonly pbc::RepeatedField<double> bids_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Bids {
      get { return bids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnifiedOrderLevelMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnifiedOrderLevelMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lowerbound, other.Lowerbound)) return false;
      if(!asks_.Equals(other.asks_)) return false;
      if(!bids_.Equals(other.bids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lowerbound != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lowerbound);
      hash ^= asks_.GetHashCode();
      hash ^= bids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lowerbound != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Lowerbound);
      }
      asks_.WriteTo(output, _repeated_asks_codec);
      bids_.WriteTo(output, _repeated_bids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lowerbound != 0D) {
        size += 1 + 8;
      }
      size += asks_.CalculateSize(_repeated_asks_codec);
      size += bids_.CalculateSize(_repeated_bids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnifiedOrderLevelMessage other) {
      if (other == null) {
        return;
      }
      if (other.Lowerbound != 0D) {
        Lowerbound = other.Lowerbound;
      }
      asks_.Add(other.asks_);
      bids_.Add(other.bids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Lowerbound = input.ReadDouble();
            break;
          }
          case 18:
          case 17: {
            asks_.AddEntriesFrom(input, _repeated_asks_codec);
            break;
          }
          case 26:
          case 25: {
            bids_.AddEntriesFrom(input, _repeated_bids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UnifiedOrderBookResponse
  /// </summary>
  internal sealed partial class UnifiedOrderBookResponse : pb::IMessage<UnifiedOrderBookResponse> {
    private static readonly pb::MessageParser<UnifiedOrderBookResponse> _parser = new pb::MessageParser<UnifiedOrderBookResponse>(() => new UnifiedOrderBookResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnifiedOrderBookResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.OrderbooksReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookResponse(UnifiedOrderBookResponse other) : this() {
      asks_ = other.asks_.Clone();
      bids_ = other.bids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnifiedOrderBookResponse Clone() {
      return new UnifiedOrderBookResponse(this);
    }

    /// <summary>Field number for the "asks" field.</summary>
    public const int AsksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage> _repeated_asks_codec
        = pb::FieldCodec.ForMessage(10, global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage.Parser);
    private readonly pbc::RepeatedField<global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage> asks_ = new pbc::RepeatedField<global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage>();
    /// <summary>
    /// asks
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage> Asks {
      get { return asks_; }
    }

    /// <summary>Field number for the "bids" field.</summary>
    public const int BidsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage> _repeated_bids_codec
        = pb::FieldCodec.ForMessage(18, global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage.Parser);
    private readonly pbc::RepeatedField<global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage> bids_ = new pbc::RepeatedField<global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage>();
    /// <summary>
    /// bids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CrossTrader.Models.Remoting.UnifiedOrderLevelMessage> Bids {
      get { return bids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnifiedOrderBookResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnifiedOrderBookResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!asks_.Equals(other.asks_)) return false;
      if(!bids_.Equals(other.bids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= asks_.GetHashCode();
      hash ^= bids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      asks_.WriteTo(output, _repeated_asks_codec);
      bids_.WriteTo(output, _repeated_bids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += asks_.CalculateSize(_repeated_asks_codec);
      size += bids_.CalculateSize(_repeated_bids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnifiedOrderBookResponse other) {
      if (other == null) {
        return;
      }
      asks_.Add(other.asks_);
      bids_.Add(other.bids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            asks_.AddEntriesFrom(input, _repeated_asks_codec);
            break;
          }
          case 18: {
            bids_.AddEntriesFrom(input, _repeated_bids_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
