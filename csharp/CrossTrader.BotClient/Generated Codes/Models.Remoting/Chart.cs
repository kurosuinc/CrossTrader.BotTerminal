// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: chart.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CrossTrader.Models.Remoting {

  /// <summary>Holder for reflection information generated from chart.proto</summary>
  internal static partial class ChartReflection {

    #region Descriptor
    /// <summary>File descriptor for chart.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChartReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtjaGFydC5wcm90bxILY3Jvc3N0cmFkZXIaDGNvbW1vbi5wcm90bxoeZ29v",
            "Z2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvIlgKEFRpbWVGcmFtZVJlcXVlc3QSFQoNaW5zdHJ1",
            "bWVudF9pZBgBIAEoBRItCgp0aW1lX2ZyYW1lGAIgASgLMhkuZ29vZ2xlLnBy",
            "b3RvYnVmLkR1cmF0aW9uIpwBCgtPaGxjTWVzc2FnZRItCglvcGVuX3RpbWUY",
            "ASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhIKCm9wZW5fcHJp",
            "Y2UYAiABKAESEgoKaGlnaF9wcmljZRgDIAEoARIRCglsb3dfcHJpY2UYBCAB",
            "KAESEwoLY2xvc2VfcHJpY2UYBSABKAESDgoGdm9sdW1lGAYgASgBImMKDE9o",
            "bGNSZXNwb25zZRIqCgZhY3Rpb24YASABKA4yGi5jcm9zc3RyYWRlci5DaGFu",
            "Z2VkQWN0aW9uEicKBWl0ZW1zGAIgAygLMhguY3Jvc3N0cmFkZXIuT2hsY01l",
            "c3NhZ2UyWwoMQ2hhcnRTZXJ2aWNlEksKDVN1YnNjcmliZU9obGMSHS5jcm9z",
            "c3RyYWRlci5UaW1lRnJhbWVSZXF1ZXN0GhkuY3Jvc3N0cmFkZXIuT2hsY1Jl",
            "c3BvbnNlMAFCHqoCG0Nyb3NzVHJhZGVyLk1vZGVscy5SZW1vdGluZ2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CrossTrader.Models.Remoting.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.TimeFrameRequest), global::CrossTrader.Models.Remoting.TimeFrameRequest.Parser, new[]{ "InstrumentId", "TimeFrame" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.OhlcMessage), global::CrossTrader.Models.Remoting.OhlcMessage.Parser, new[]{ "OpenTime", "OpenPrice", "HighPrice", "LowPrice", "ClosePrice", "Volume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.OhlcResponse), global::CrossTrader.Models.Remoting.OhlcResponse.Parser, new[]{ "Action", "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class TimeFrameRequest : pb::IMessage<TimeFrameRequest> {
    private static readonly pb::MessageParser<TimeFrameRequest> _parser = new pb::MessageParser<TimeFrameRequest>(() => new TimeFrameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeFrameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.ChartReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeFrameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeFrameRequest(TimeFrameRequest other) : this() {
      instrumentId_ = other.instrumentId_;
      timeFrame_ = other.timeFrame_ != null ? other.timeFrame_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeFrameRequest Clone() {
      return new TimeFrameRequest(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "time_frame" field.</summary>
    public const int TimeFrameFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration timeFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeFrame {
      get { return timeFrame_; }
      set {
        timeFrame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeFrameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeFrameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (!object.Equals(TimeFrame, other.TimeFrame)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (timeFrame_ != null) hash ^= TimeFrame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (timeFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (timeFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeFrameRequest other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.timeFrame_ != null) {
        if (timeFrame_ == null) {
          TimeFrame = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeFrame.MergeFrom(other.TimeFrame);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 18: {
            if (timeFrame_ == null) {
              TimeFrame = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeFrame);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class OhlcMessage : pb::IMessage<OhlcMessage> {
    private static readonly pb::MessageParser<OhlcMessage> _parser = new pb::MessageParser<OhlcMessage>(() => new OhlcMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OhlcMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.ChartReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OhlcMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OhlcMessage(OhlcMessage other) : this() {
      openTime_ = other.openTime_ != null ? other.openTime_.Clone() : null;
      openPrice_ = other.openPrice_;
      highPrice_ = other.highPrice_;
      lowPrice_ = other.lowPrice_;
      closePrice_ = other.closePrice_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OhlcMessage Clone() {
      return new OhlcMessage(this);
    }

    /// <summary>Field number for the "open_time" field.</summary>
    public const int OpenTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp openTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OpenTime {
      get { return openTime_; }
      set {
        openTime_ = value;
      }
    }

    /// <summary>Field number for the "open_price" field.</summary>
    public const int OpenPriceFieldNumber = 2;
    private double openPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double OpenPrice {
      get { return openPrice_; }
      set {
        openPrice_ = value;
      }
    }

    /// <summary>Field number for the "high_price" field.</summary>
    public const int HighPriceFieldNumber = 3;
    private double highPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double HighPrice {
      get { return highPrice_; }
      set {
        highPrice_ = value;
      }
    }

    /// <summary>Field number for the "low_price" field.</summary>
    public const int LowPriceFieldNumber = 4;
    private double lowPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double LowPrice {
      get { return lowPrice_; }
      set {
        lowPrice_ = value;
      }
    }

    /// <summary>Field number for the "close_price" field.</summary>
    public const int ClosePriceFieldNumber = 5;
    private double closePrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ClosePrice {
      get { return closePrice_; }
      set {
        closePrice_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 6;
    private double volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OhlcMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OhlcMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OpenTime, other.OpenTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OpenPrice, other.OpenPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HighPrice, other.HighPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowPrice, other.LowPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ClosePrice, other.ClosePrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (openTime_ != null) hash ^= OpenTime.GetHashCode();
      if (OpenPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OpenPrice);
      if (HighPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HighPrice);
      if (LowPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowPrice);
      if (ClosePrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ClosePrice);
      if (Volume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (openTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OpenTime);
      }
      if (OpenPrice != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(OpenPrice);
      }
      if (HighPrice != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(HighPrice);
      }
      if (LowPrice != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(LowPrice);
      }
      if (ClosePrice != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ClosePrice);
      }
      if (Volume != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (openTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpenTime);
      }
      if (OpenPrice != 0D) {
        size += 1 + 8;
      }
      if (HighPrice != 0D) {
        size += 1 + 8;
      }
      if (LowPrice != 0D) {
        size += 1 + 8;
      }
      if (ClosePrice != 0D) {
        size += 1 + 8;
      }
      if (Volume != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OhlcMessage other) {
      if (other == null) {
        return;
      }
      if (other.openTime_ != null) {
        if (openTime_ == null) {
          OpenTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OpenTime.MergeFrom(other.OpenTime);
      }
      if (other.OpenPrice != 0D) {
        OpenPrice = other.OpenPrice;
      }
      if (other.HighPrice != 0D) {
        HighPrice = other.HighPrice;
      }
      if (other.LowPrice != 0D) {
        LowPrice = other.LowPrice;
      }
      if (other.ClosePrice != 0D) {
        ClosePrice = other.ClosePrice;
      }
      if (other.Volume != 0D) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (openTime_ == null) {
              OpenTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OpenTime);
            break;
          }
          case 17: {
            OpenPrice = input.ReadDouble();
            break;
          }
          case 25: {
            HighPrice = input.ReadDouble();
            break;
          }
          case 33: {
            LowPrice = input.ReadDouble();
            break;
          }
          case 41: {
            ClosePrice = input.ReadDouble();
            break;
          }
          case 49: {
            Volume = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class OhlcResponse : pb::IMessage<OhlcResponse> {
    private static readonly pb::MessageParser<OhlcResponse> _parser = new pb::MessageParser<OhlcResponse>(() => new OhlcResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OhlcResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.ChartReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OhlcResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OhlcResponse(OhlcResponse other) : this() {
      action_ = other.action_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OhlcResponse Clone() {
      return new OhlcResponse(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::CrossTrader.Models.Remoting.ChangedAction action_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CrossTrader.Models.Remoting.ChangedAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CrossTrader.Models.Remoting.OhlcMessage> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::CrossTrader.Models.Remoting.OhlcMessage.Parser);
    private readonly pbc::RepeatedField<global::CrossTrader.Models.Remoting.OhlcMessage> items_ = new pbc::RepeatedField<global::CrossTrader.Models.Remoting.OhlcMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CrossTrader.Models.Remoting.OhlcMessage> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OhlcResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OhlcResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != 0) hash ^= Action.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OhlcResponse other) {
      if (other == null) {
        return;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::CrossTrader.Models.Remoting.ChangedAction) input.ReadEnum();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
