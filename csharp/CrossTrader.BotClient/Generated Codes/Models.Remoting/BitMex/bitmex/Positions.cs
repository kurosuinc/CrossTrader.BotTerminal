// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bitmex/positions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CrossTrader.Models.Remoting.BitMex {

  /// <summary>Holder for reflection information generated from bitmex/positions.proto</summary>
  internal static partial class PositionsReflection {

    #region Descriptor
    /// <summary>File descriptor for bitmex/positions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PositionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZiaXRtZXgvcG9zaXRpb25zLnByb3RvEhJjcm9zc3RyYWRlci5iaXRtZXga",
            "H2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aDGNvbW1vbi5wcm90",
            "byKoAwoPUG9zaXRpb25NZXNzYWdlEhAKCGxldmVyYWdlGAEgASgBEhQKDGNy",
            "b3NzX21hcmdpbhgCIAEoCBI1ChFvcGVuaW5nX3RpbWVzdGFtcBgDIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASHwoXb3Blbl9vcmRlcl9idXlf",
            "cXVhbnRpdHkYBCABKAESIAoYb3Blbl9vcmRlcl9zZWxsX3F1YW50aXR5GAUg",
            "ASgBEhgKEGN1cnJlbnRfcXVhbnRpdHkYBiABKAESFAoMY3VycmVudF9jb3N0",
            "GAcgASgBEhkKEWN1cnJlbnRfY29tbWlzaW9uGAggASgBEhkKEXVucmVhbGl6",
            "ZWRfcHJvZml0GAkgASgBEiEKGXVucmVhbGl6ZWRfcHJvZml0X3BlcmNlbnQY",
            "CiABKAESHgoWdW5yZWFsaXplZF9yb2VfcGVyY2VudBgLIAEoARIbChNhdmVy",
            "YWdlX2VudHJ5X3ByaWNlGAwgASgBEi0KCXRpbWVzdGFtcBgNIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAidwoRUG9zaXRpb25zUmVzcG9uc2US",
            "KgoGYWN0aW9uGAEgASgOMhouY3Jvc3N0cmFkZXIuQ2hhbmdlZEFjdGlvbhI2",
            "Cglwb3NpdGlvbnMYAiADKAsyIy5jcm9zc3RyYWRlci5iaXRtZXguUG9zaXRp",
            "b25NZXNzYWdlMnMKEFBvc2l0aW9uc1NlcnZpY2USXwoSU3Vic2NyaWJlUG9z",
            "aXRpb25zEiAuY3Jvc3N0cmFkZXIuSW5zdHJ1bWVudElkUmVxdWVzdBolLmNy",
            "b3NzdHJhZGVyLmJpdG1leC5Qb3NpdGlvbnNSZXNwb25zZTABQiWqAiJDcm9z",
            "c1RyYWRlci5Nb2RlbHMuUmVtb3RpbmcuQml0TWV4YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::CrossTrader.Models.Remoting.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.BitMex.PositionMessage), global::CrossTrader.Models.Remoting.BitMex.PositionMessage.Parser, new[]{ "Leverage", "CrossMargin", "OpeningTimestamp", "OpenOrderBuyQuantity", "OpenOrderSellQuantity", "CurrentQuantity", "CurrentCost", "CurrentCommision", "UnrealizedProfit", "UnrealizedProfitPercent", "UnrealizedRoePercent", "AverageEntryPrice", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrossTrader.Models.Remoting.BitMex.PositionsResponse), global::CrossTrader.Models.Remoting.BitMex.PositionsResponse.Parser, new[]{ "Action", "Positions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class PositionMessage : pb::IMessage<PositionMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionMessage> _parser = new pb::MessageParser<PositionMessage>(() => new PositionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PositionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.BitMex.PositionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionMessage(PositionMessage other) : this() {
      leverage_ = other.leverage_;
      crossMargin_ = other.crossMargin_;
      openingTimestamp_ = other.openingTimestamp_ != null ? other.openingTimestamp_.Clone() : null;
      openOrderBuyQuantity_ = other.openOrderBuyQuantity_;
      openOrderSellQuantity_ = other.openOrderSellQuantity_;
      currentQuantity_ = other.currentQuantity_;
      currentCost_ = other.currentCost_;
      currentCommision_ = other.currentCommision_;
      unrealizedProfit_ = other.unrealizedProfit_;
      unrealizedProfitPercent_ = other.unrealizedProfitPercent_;
      unrealizedRoePercent_ = other.unrealizedRoePercent_;
      averageEntryPrice_ = other.averageEntryPrice_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionMessage Clone() {
      return new PositionMessage(this);
    }

    /// <summary>Field number for the "leverage" field.</summary>
    public const int LeverageFieldNumber = 1;
    private double leverage_;
    /// <summary>
    ///    "commission": 0,
    ///    "initMarginReq": 0,
    ///    "maintMarginReq": 0,
    ///    "riskLimit": 0,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Leverage {
      get { return leverage_; }
      set {
        leverage_ = value;
      }
    }

    /// <summary>Field number for the "cross_margin" field.</summary>
    public const int CrossMarginFieldNumber = 2;
    private bool crossMargin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CrossMargin {
      get { return crossMargin_; }
      set {
        crossMargin_ = value;
      }
    }

    /// <summary>Field number for the "opening_timestamp" field.</summary>
    public const int OpeningTimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp openingTimestamp_;
    /// <summary>
    ///    "deleveragePercentile": 0,
    ///    "rebalancedPnl": 0,
    ///    "prevRealisedPnl": 0,
    ///    "prevUnrealisedPnl": 0,
    ///    "prevClosePrice": 0,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OpeningTimestamp {
      get { return openingTimestamp_; }
      set {
        openingTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "open_order_buy_quantity" field.</summary>
    public const int OpenOrderBuyQuantityFieldNumber = 4;
    private double openOrderBuyQuantity_;
    /// <summary>
    ///    "openingQty": 0,
    ///    "openingCost": 0,
    ///    "openingComm": 0,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OpenOrderBuyQuantity {
      get { return openOrderBuyQuantity_; }
      set {
        openOrderBuyQuantity_ = value;
      }
    }

    /// <summary>Field number for the "open_order_sell_quantity" field.</summary>
    public const int OpenOrderSellQuantityFieldNumber = 5;
    private double openOrderSellQuantity_;
    /// <summary>
    ///    "openOrderBuyCost": 0,
    ///    "openOrderBuyPremium": 0, 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OpenOrderSellQuantity {
      get { return openOrderSellQuantity_; }
      set {
        openOrderSellQuantity_ = value;
      }
    }

    /// <summary>Field number for the "current_quantity" field.</summary>
    public const int CurrentQuantityFieldNumber = 6;
    private double currentQuantity_;
    /// <summary>
    ///    "openOrderSellCost": 0,
    ///    "openOrderSellPremium": 0,
    ///    "execBuyQty": 0,
    ///    "execBuyCost": 0,
    ///    "execSellQty": 0,
    ///    "execSellCost": 0,
    ///    "execQty": 0,
    ///    "execCost": 0,
    ///    "execComm": 0,
    ///    "currentTimestamp": "2019-06-11T09:27:28.138Z",
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CurrentQuantity {
      get { return currentQuantity_; }
      set {
        currentQuantity_ = value;
      }
    }

    /// <summary>Field number for the "current_cost" field.</summary>
    public const int CurrentCostFieldNumber = 7;
    private double currentCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CurrentCost {
      get { return currentCost_; }
      set {
        currentCost_ = value;
      }
    }

    /// <summary>Field number for the "current_commision" field.</summary>
    public const int CurrentCommisionFieldNumber = 8;
    private double currentCommision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CurrentCommision {
      get { return currentCommision_; }
      set {
        currentCommision_ = value;
      }
    }

    /// <summary>Field number for the "unrealized_profit" field.</summary>
    public const int UnrealizedProfitFieldNumber = 9;
    private double unrealizedProfit_;
    /// <summary>
    ///    "realisedCost": 0,
    ///    "unrealisedCost": 0,
    ///    "grossOpenCost": 0,
    ///    "grossOpenPremium": 0,
    ///    "grossExecCost": 0,
    ///    "isOpen": true,
    ///    "markPrice": 0,
    ///    "markValue": 0,
    ///    "riskValue": 0,
    ///    "homeNotional": 0,
    ///    "foreignNotional": 0,
    ///    "posState": "string",
    ///    "posCost": 0,
    ///    "posCost2": 0,
    ///    "posCross": 0,
    ///    "posInit": 0,
    ///    "posComm": 0,
    ///    "posLoss": 0,
    ///    "posMargin": 0,
    ///    "posMaint": 0,
    ///    "posAllowance": 0,
    ///    "taxableMargin": 0,
    ///    "initMargin": 0,
    ///    "maintMargin": 0,
    ///    "sessionMargin": 0,
    ///    "targetExcessMargin": 0,
    ///    "varMargin": 0,
    ///    "realisedGrossPnl": 0,
    ///    "realisedTax": 0,
    ///    "realisedPnl": 0,
    ///    "unrealisedGrossPnl": 0,
    ///    "longBankrupt": 0,
    ///    "shortBankrupt": 0,
    ///    "taxBase": 0,
    ///    "indicativeTaxRate": 0,
    ///    "indicativeTax": 0,
    ///    "unrealisedTax": 0,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UnrealizedProfit {
      get { return unrealizedProfit_; }
      set {
        unrealizedProfit_ = value;
      }
    }

    /// <summary>Field number for the "unrealized_profit_percent" field.</summary>
    public const int UnrealizedProfitPercentFieldNumber = 10;
    private double unrealizedProfitPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UnrealizedProfitPercent {
      get { return unrealizedProfitPercent_; }
      set {
        unrealizedProfitPercent_ = value;
      }
    }

    /// <summary>Field number for the "unrealized_roe_percent" field.</summary>
    public const int UnrealizedRoePercentFieldNumber = 11;
    private double unrealizedRoePercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UnrealizedRoePercent {
      get { return unrealizedRoePercent_; }
      set {
        unrealizedRoePercent_ = value;
      }
    }

    /// <summary>Field number for the "average_entry_price" field.</summary>
    public const int AverageEntryPriceFieldNumber = 12;
    private double averageEntryPrice_;
    /// <summary>
    ///    "simpleQty": 0,
    ///    "simpleCost": 0,
    ///    "simpleValue": 0,
    ///    "simplePnl": 0,
    ///    "simplePnlPcnt": 0,
    ///    "avgCostPrice": 0,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AverageEntryPrice {
      get { return averageEntryPrice_; }
      set {
        averageEntryPrice_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    ///    "breakEvenPrice": 0,
    ///    "marginCallPrice": 0,
    ///    "liquidationPrice": 0,
    ///    "bankruptPrice": 0,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PositionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PositionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Leverage, other.Leverage)) return false;
      if (CrossMargin != other.CrossMargin) return false;
      if (!object.Equals(OpeningTimestamp, other.OpeningTimestamp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OpenOrderBuyQuantity, other.OpenOrderBuyQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OpenOrderSellQuantity, other.OpenOrderSellQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentQuantity, other.CurrentQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentCost, other.CurrentCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentCommision, other.CurrentCommision)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnrealizedProfit, other.UnrealizedProfit)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnrealizedProfitPercent, other.UnrealizedProfitPercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnrealizedRoePercent, other.UnrealizedRoePercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AverageEntryPrice, other.AverageEntryPrice)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Leverage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Leverage);
      if (CrossMargin != false) hash ^= CrossMargin.GetHashCode();
      if (openingTimestamp_ != null) hash ^= OpeningTimestamp.GetHashCode();
      if (OpenOrderBuyQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OpenOrderBuyQuantity);
      if (OpenOrderSellQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OpenOrderSellQuantity);
      if (CurrentQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentQuantity);
      if (CurrentCost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentCost);
      if (CurrentCommision != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentCommision);
      if (UnrealizedProfit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnrealizedProfit);
      if (UnrealizedProfitPercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnrealizedProfitPercent);
      if (UnrealizedRoePercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnrealizedRoePercent);
      if (AverageEntryPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AverageEntryPrice);
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Leverage != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Leverage);
      }
      if (CrossMargin != false) {
        output.WriteRawTag(16);
        output.WriteBool(CrossMargin);
      }
      if (openingTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OpeningTimestamp);
      }
      if (OpenOrderBuyQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(OpenOrderBuyQuantity);
      }
      if (OpenOrderSellQuantity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(OpenOrderSellQuantity);
      }
      if (CurrentQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CurrentQuantity);
      }
      if (CurrentCost != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(CurrentCost);
      }
      if (CurrentCommision != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(CurrentCommision);
      }
      if (UnrealizedProfit != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(UnrealizedProfit);
      }
      if (UnrealizedProfitPercent != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(UnrealizedProfitPercent);
      }
      if (UnrealizedRoePercent != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(UnrealizedRoePercent);
      }
      if (AverageEntryPrice != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(AverageEntryPrice);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Leverage != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Leverage);
      }
      if (CrossMargin != false) {
        output.WriteRawTag(16);
        output.WriteBool(CrossMargin);
      }
      if (openingTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OpeningTimestamp);
      }
      if (OpenOrderBuyQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(OpenOrderBuyQuantity);
      }
      if (OpenOrderSellQuantity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(OpenOrderSellQuantity);
      }
      if (CurrentQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CurrentQuantity);
      }
      if (CurrentCost != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(CurrentCost);
      }
      if (CurrentCommision != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(CurrentCommision);
      }
      if (UnrealizedProfit != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(UnrealizedProfit);
      }
      if (UnrealizedProfitPercent != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(UnrealizedProfitPercent);
      }
      if (UnrealizedRoePercent != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(UnrealizedRoePercent);
      }
      if (AverageEntryPrice != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(AverageEntryPrice);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Leverage != 0D) {
        size += 1 + 8;
      }
      if (CrossMargin != false) {
        size += 1 + 1;
      }
      if (openingTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpeningTimestamp);
      }
      if (OpenOrderBuyQuantity != 0D) {
        size += 1 + 8;
      }
      if (OpenOrderSellQuantity != 0D) {
        size += 1 + 8;
      }
      if (CurrentQuantity != 0D) {
        size += 1 + 8;
      }
      if (CurrentCost != 0D) {
        size += 1 + 8;
      }
      if (CurrentCommision != 0D) {
        size += 1 + 8;
      }
      if (UnrealizedProfit != 0D) {
        size += 1 + 8;
      }
      if (UnrealizedProfitPercent != 0D) {
        size += 1 + 8;
      }
      if (UnrealizedRoePercent != 0D) {
        size += 1 + 8;
      }
      if (AverageEntryPrice != 0D) {
        size += 1 + 8;
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PositionMessage other) {
      if (other == null) {
        return;
      }
      if (other.Leverage != 0D) {
        Leverage = other.Leverage;
      }
      if (other.CrossMargin != false) {
        CrossMargin = other.CrossMargin;
      }
      if (other.openingTimestamp_ != null) {
        if (openingTimestamp_ == null) {
          OpeningTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OpeningTimestamp.MergeFrom(other.OpeningTimestamp);
      }
      if (other.OpenOrderBuyQuantity != 0D) {
        OpenOrderBuyQuantity = other.OpenOrderBuyQuantity;
      }
      if (other.OpenOrderSellQuantity != 0D) {
        OpenOrderSellQuantity = other.OpenOrderSellQuantity;
      }
      if (other.CurrentQuantity != 0D) {
        CurrentQuantity = other.CurrentQuantity;
      }
      if (other.CurrentCost != 0D) {
        CurrentCost = other.CurrentCost;
      }
      if (other.CurrentCommision != 0D) {
        CurrentCommision = other.CurrentCommision;
      }
      if (other.UnrealizedProfit != 0D) {
        UnrealizedProfit = other.UnrealizedProfit;
      }
      if (other.UnrealizedProfitPercent != 0D) {
        UnrealizedProfitPercent = other.UnrealizedProfitPercent;
      }
      if (other.UnrealizedRoePercent != 0D) {
        UnrealizedRoePercent = other.UnrealizedRoePercent;
      }
      if (other.AverageEntryPrice != 0D) {
        AverageEntryPrice = other.AverageEntryPrice;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Leverage = input.ReadDouble();
            break;
          }
          case 16: {
            CrossMargin = input.ReadBool();
            break;
          }
          case 26: {
            if (openingTimestamp_ == null) {
              OpeningTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OpeningTimestamp);
            break;
          }
          case 33: {
            OpenOrderBuyQuantity = input.ReadDouble();
            break;
          }
          case 41: {
            OpenOrderSellQuantity = input.ReadDouble();
            break;
          }
          case 49: {
            CurrentQuantity = input.ReadDouble();
            break;
          }
          case 57: {
            CurrentCost = input.ReadDouble();
            break;
          }
          case 65: {
            CurrentCommision = input.ReadDouble();
            break;
          }
          case 73: {
            UnrealizedProfit = input.ReadDouble();
            break;
          }
          case 81: {
            UnrealizedProfitPercent = input.ReadDouble();
            break;
          }
          case 89: {
            UnrealizedRoePercent = input.ReadDouble();
            break;
          }
          case 97: {
            AverageEntryPrice = input.ReadDouble();
            break;
          }
          case 106: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Leverage = input.ReadDouble();
            break;
          }
          case 16: {
            CrossMargin = input.ReadBool();
            break;
          }
          case 26: {
            if (openingTimestamp_ == null) {
              OpeningTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OpeningTimestamp);
            break;
          }
          case 33: {
            OpenOrderBuyQuantity = input.ReadDouble();
            break;
          }
          case 41: {
            OpenOrderSellQuantity = input.ReadDouble();
            break;
          }
          case 49: {
            CurrentQuantity = input.ReadDouble();
            break;
          }
          case 57: {
            CurrentCost = input.ReadDouble();
            break;
          }
          case 65: {
            CurrentCommision = input.ReadDouble();
            break;
          }
          case 73: {
            UnrealizedProfit = input.ReadDouble();
            break;
          }
          case 81: {
            UnrealizedProfitPercent = input.ReadDouble();
            break;
          }
          case 89: {
            UnrealizedRoePercent = input.ReadDouble();
            break;
          }
          case 97: {
            AverageEntryPrice = input.ReadDouble();
            break;
          }
          case 106: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class PositionsResponse : pb::IMessage<PositionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionsResponse> _parser = new pb::MessageParser<PositionsResponse>(() => new PositionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PositionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrossTrader.Models.Remoting.BitMex.PositionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionsResponse(PositionsResponse other) : this() {
      action_ = other.action_;
      positions_ = other.positions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionsResponse Clone() {
      return new PositionsResponse(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::CrossTrader.Models.Remoting.ChangedAction action_ = global::CrossTrader.Models.Remoting.ChangedAction.Add;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CrossTrader.Models.Remoting.ChangedAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CrossTrader.Models.Remoting.BitMex.PositionMessage> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(18, global::CrossTrader.Models.Remoting.BitMex.PositionMessage.Parser);
    private readonly pbc::RepeatedField<global::CrossTrader.Models.Remoting.BitMex.PositionMessage> positions_ = new pbc::RepeatedField<global::CrossTrader.Models.Remoting.BitMex.PositionMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CrossTrader.Models.Remoting.BitMex.PositionMessage> Positions {
      get { return positions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PositionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PositionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if(!positions_.Equals(other.positions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) hash ^= Action.GetHashCode();
      hash ^= positions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      positions_.WriteTo(ref output, _repeated_positions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      size += positions_.CalculateSize(_repeated_positions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PositionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Action != global::CrossTrader.Models.Remoting.ChangedAction.Add) {
        Action = other.Action;
      }
      positions_.Add(other.positions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::CrossTrader.Models.Remoting.ChangedAction) input.ReadEnum();
            break;
          }
          case 18: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = (global::CrossTrader.Models.Remoting.ChangedAction) input.ReadEnum();
            break;
          }
          case 18: {
            positions_.AddEntriesFrom(ref input, _repeated_positions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
